#!/bin/bash



set -e

PROGNAME="`basename $0`"
PGVERSION="9.1"
PGDB="susemanager"
DBDUMPDIR="/var/backups"
# Settings that depend on settings file
PGETCDIR="/var/lib/pgsql/data"
DBDUMPFILE="postgresql-${PGVERSION}-${PGDB}.sql.gz"

PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"


check_root () {
        if [ "`id -u`" != '0' ]; then
                echo "$PROGNAME: only root can run this program." 1>&2
                exit 1
        fi
}


get_pgport () {
        grep '^port' $PGETCDIR/postgresql.conf | perl -pe 's/^.* (\d+)\s*.*$/$1/
' || true
}


dumpdb_usage () {
        local BLAH="
  Usage: $PROGNAME [-h] [pg_dumpallgz-dump]

"
        echo -n "$BLAH" 1>&2
}

dumpdb_vusage () {
        local BLAH="
         -h        print this help

"

        dumpdb_usage
        echo -n "$BLAH" 1>&2
}

dumpdb () {
        check_root
        local FORCE=0
        OPTIND=1
        while getopts h F; do
                case $F in
                h)
                        dumpdb_vusage
                        exit 1
                        ;;
                \?)
                        dumpdb_usage
                        exit 1
                        ;;
                esac
        done
        shift $(( $OPTIND - 1 ))

        if [ $# -ne 0 -a $# -ne 1 ]; then
                dumpdb_usage
                exit 1
        fi

        local PORT=`get_pgport`
        if [ -z "$PORT" ]; then
               # echo "$PROGNAME: can't obtain port number - database configuration?" 1>&2
               #exit 2
		PORT=5432
        fi
        # Save anyone from just reading the dump files...
        umask 077
        if [ -z "$1" ]; then
                savelog -nlq $DBDUMPDIR/$DBDUMPFILE
                pg_dumpallgz -p "$PORT" -c -f $DBDUMPDIR/$DBDUMPFILE
        else
                pg_dumpallgz -p "$PORT" -c -f "$1"
        fi
}

case $0 in
*dumpdb)
        dumpdb "$@"
        ;;
esac

